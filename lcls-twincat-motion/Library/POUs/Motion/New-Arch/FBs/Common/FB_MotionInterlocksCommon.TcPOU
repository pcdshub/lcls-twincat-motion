<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_MotionInterlocksCommon" Id="{b69073ed-2a55-41fc-84a9-b8fe79332e5e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MotionInterlocksCommon IMPLEMENTS I_MotionInterlocksCommon
VAR
    {attribute 'hide'}
    iMotionLogger 		: I_MotionLogger;
    {attribute 'hide'}
    bPowerEnabled: BOOL:=FALSE;
   // NC STO Input: TRUE if ok to move
    {attribute 'pytmc' := '
        pv: PLC:bHardwareEnable
        io: i
        field: ZNAM FALSE
        field: ONAM TRUE
        field: DESC TRUE if STO not hit
    '}
    bHardwareEnable AT %I*: BOOL ;

    // Used by the IOC to disable an axis
    {attribute 'pytmc' := '
        pv: PLC:bUserEnable
        io: io
        field: ZNAM DISABLE
        field: ONAM ENABLE
        field: DESC Used to disable power entirely for an axis
    '}
    bUserEnable: BOOL := TRUE;

    {attribute 'hide'}
    bEnable: BOOL;
    {attribute 'hide'}
    bReset : BOOL;
    {attribute 'hide'}
    sMessage : STRING;
    {attribute 'hide'}
    bError : BOOL;
    {attribute 'hide'}
    nErrorID : UDINT;
    {attribute 'hide'}
    // Set by default, an error condition will reset this
    bMoveOk : BOOL := TRUE;
    {attribute 'hide'}
    rtGlobalReset : R_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF ( iMotionLogger = 0) THEN
    // throw an exception
    RETURN;
END_IF

// read share
bPowerEnabled := bEnable AND bHardwareEnable;
bPowerEnabled R= NOT bUserEnable;

bMoveOk := bUserEnable AND  bHardwareEnable AND bEnable;

IF NOT bUserEnable OR NOT bHardwareEnable THEN
    bError := TRUE;
    nErrorID:= 1;
    bMoveOk := FALSE;
    IF NOT bUserEnable THEN
        sMessage := 'User enable interlock triggered!';
    ELSE
        sMessage := 'Hardware enbale interlocks triggered!';
    END_IF
END_IF

// wait for global reset event to complete
rtGlobalReset(CLK:=bReset);
IF rtGlobalReset.Q THEN
    bError := FALSE;
    nErrorID:= 0;
    sMessage:='';
END_IF]]></ST>
    </Implementation>
    <Method Name="CallAfterInit" Id="{bb25ce30-2def-4497-bead-4e7295fc730f}">
      <Declaration><![CDATA[METHOD PUBLIC CallAfterInit
VAR_INPUT
    iMotionLogger : I_MotionLogger;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.iMotionLogger := iMotionLogger;]]></ST>
      </Implementation>
    </Method>
    <Method Name="DriveCommands" Id="{6d01eab2-7989-4c7e-b542-03db7614d447}">
      <Declaration><![CDATA[METHOD DriveCommands
VAR_INPUT
    Enable: BOOL;
    NewMoveReq : BOOL;
    Reset: BOOL;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.bEnable := Enable;
THIS^.bReset := Reset;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Error" Id="{21f5c9dd-d9f9-4fb7-a70a-688ad37ac74c}">
      <Declaration><![CDATA[PROPERTY Error : BOOL
]]></Declaration>
      <Get Name="Get" Id="{021721b1-8d55-49d6-a8cf-4547c5e3bcd2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error := bError;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ErrorID" Id="{c58250f8-ae5a-4056-a2ed-503e8b03cb8d}">
      <Declaration><![CDATA[PROPERTY ErrorID : UDINT
]]></Declaration>
      <Get Name="Get" Id="{a1817a62-dd31-4d18-8907-b880a900e971}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ErrorID := nErrorID;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_Init" Id="{ee1048d7-3a0b-4701-a887-c2bc01c18e00}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)

    iMotionLogger 		: I_MotionLogger;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.iMotionLogger := iMotionLogger;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="HardwareEnable" Id="{d61e5b05-94b6-4b80-bfd7-0d1f07731219}">
      <Declaration><![CDATA[PROPERTY HardwareEnable : BOOL
]]></Declaration>
      <Set Name="Set" Id="{997b3317-ecd2-4d78-ab35-890e6b79db96}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bHardwareEnable := HardwareEnable;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Message" Id="{fff95902-de95-4707-8ab7-164e983a966f}">
      <Declaration><![CDATA[PROPERTY Message : T_MAXSTRING
]]></Declaration>
      <Get Name="Get" Id="{aa8e66bf-be37-477b-a097-6e499951d5ae}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Message := sMessage;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MoveOk" Id="{a6c854ac-10d2-4324-b515-25871c48273c}">
      <Declaration><![CDATA[PROPERTY MoveOk : BOOL
]]></Declaration>
      <Get Name="Get" Id="{c6848f02-95c1-4045-9aa0-95260cab536e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MoveOk := bMoveOk;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="PowerEnabled" Id="{6a435248-a266-41ef-9b9c-8e0bf7663a4b}">
      <Declaration><![CDATA[PROPERTY PowerEnabled : BOOL
]]></Declaration>
      <Get Name="Get" Id="{c27ac7b3-d93e-4dca-97d4-f9f71a18aff4}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[PowerEnabled :=bPowerEnabled;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="UserEnable" Id="{3dd63e54-e47f-4503-9258-eaac8ea1f82e}">
      <Declaration><![CDATA[PROPERTY UserEnable : BOOL
]]></Declaration>
      <Set Name="Set" Id="{1bc1daba-a9ae-4d73-a148-bfc9f891f3f2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[bUserEnable := UserEnable;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>