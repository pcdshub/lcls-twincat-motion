<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_MotionAxisNC" Id="{c6c45e58-0632-4869-96bd-3ee4e21217a8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MotionAxisNC EXTENDS FB_MotionAxisCommon
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
    {attribute 'hide'}
    iMotionAxisShareData : I_MotionAxisShareData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Read share data
THIS^.HomeNC(SUPER^.bCommandedMoveHome);
// Call base class body
SUPER^();
// update share data]]></ST>
    </Implementation>
    <Method Name="FB_Init" Id="{77133afc-c7e9-4d68-9e55-a5f682bc52af}">
      <Declaration><![CDATA[(*FB_Init is always available implicitly and it is used primarily for initialization.
The return value is not evaluated. For a specific influence, you can also declare the
methods explicitly and provide additional code there with the standard initialization
code. You can evaluate the return value.*)
METHOD FB_Init : BOOL
VAR_INPUT
    (* TRUE: the retain variables are initialized (reset warm / reset cold)*)
    bInitRetains	: BOOL;
    (* TRUE: the instance will be copied to the copy code afterward (online change)*)
    bInCopyCode	: BOOL;
    AxisRef	: REFERENCE TO AXIS_REF;
    iPersistentDataStorage	: I_PersistentDataStorage;
    iMotionLogger : I_MotionLogger;
    iMotionAxisShareData : I_MotionAxisShareData;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.iMotionAxisShareData :=  iMotionAxisShareData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="HomeNC" Id="{33ae7160-6fd9-4351-881c-ff032354b4f0}">
      <Declaration><![CDATA[METHOD HomeNC
VAR_INPUT
    bExecute: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="StartMove" Id="{6b48bf3f-d4fb-45cd-9d32-402ebab4e029}">
      <Declaration><![CDATA[(*
    Check all post condition before updating bCommandedMoveAbsolute
    The implmentatation will depend on the axis type
    DS402 NC/Direct axis : Implementation need to check that the drive is in the correct mode before initaiting the move then set bCommandedMoveAbsolute
    MP NC axis : will immediately write to bCommandedMoveAbsolute
*)
METHOD StartMove : BOOL
VAR_INPUT
    MoveMode	: E_EpicsMotorCmd;
    CmdExecute	: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE MoveMode  OF
    E_EpicsMotorCmd.MOVE_ABSOLUTE:
        SUPER^.bCommandedMoveAbsolute := CmdExecute;
    E_EpicsMotorCmd.HOME:
        SUPER^.bCommandedMoveHome:= CmdExecute;
END_CASE
// for typical NC axis no further test is needed
StartMove := CmdExecute;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>