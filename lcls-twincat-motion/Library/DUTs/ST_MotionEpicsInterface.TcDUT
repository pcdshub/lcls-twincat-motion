<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <DUT Name="ST_MotionEpicsInterface" Id="{41862e90-1b6a-4c57-b962-de11f9b4bb27}">
    <Declaration><![CDATA[TYPE ST_MotionEpicsInterface :
    // Defines the EPICS interface to moving a motor in TwinCAT
STRUCT
    // Name to use for log messages, fast faults, etc.
    sName: STRING;
    // Set to gantry difference tolerance
    nGantryTol: LINT:=0;
    // Encoder count at which this axis is aligned with other axis
    nEncRef: ULINT:=0;

    (* Commands *)
    // Used internally to request enables
    bEnable: BOOL;

    // Used internally to reset errors and other state
    {attribute 'pytmc' := '
        pv: PLC:bReset
        io: io
        field: ZNAM FALSE
        field: ONAM TRUE
        field: DESC Used internally to reset errors
    '}
    bReset: BOOL;
    // Used internally and by the IOC to start or stop a move
    bExecute: BOOL;

    (* Command Args *)
    // Used internally and by the IOC to pick what kind of move to do
    nCommand: INT;
    // Used internally and by the IOC to pass additional data to some commands
    nCmdData: INT;
    // Used internally and by the IOC to pick a destination for the move
    fPosition: LREAL;
    // Used internally and by the IOC to pick a move velocity
    fVelocity: LREAL;
    // Used internally and by the IOC to pick a move acceleration
    fAcceleration: LREAL;
    // Used internally and by the IOC to pick a move deceleration
    fDeceleration: LREAL;
    // Used internally and by the IOC to pick a home position
    {attribute 'pytmc' := '
        pv: PLC:fHomePosition
        io: io
        field: DESC Used internally and by the IOC to pick home position
    '}
    fHomePosition: LREAL;

    (* Info *)
    // Unique ID assigned to each axis in the NC
    nMotionAxisID: UDINT:=0;
    (* Returns *)
    // TRUE if in the middle of a command
    bBusy: BOOL;
    // TRUE if we've done a command and it has finished
    bDone: BOOL;
    // TRUE if the motor has been homed, or does not need to be homed
    bHomed: BOOL;

    // TRUE if we're in an error state
    {attribute 'pytmc' := '
        pv: PLC:bError
        io: i
        field: ZNAM FALSE
        field: ONAM TRUE
        field: DESC TRUE if we are in an error state
        update: 100Hz notify
    '}
    bError: BOOL;
    // Error code if nonzero
    {attribute 'pytmc' := '
        pv: PLC:nErrorId
        io: i
        field: DESC Error code if nonzero
        update: 100Hz notify
    '}
    nErrorId: UDINT;
    // Message to identify the error state
    {attribute 'pytmc' := '
        pv: PLC:sErrorMessage
        io: i
        field: DESC Message to identify the error state
        update: 100Hz notify
    '}
    sErrorMessage: STRING;

    // Misc axis status information for the IOC
    stAxisStatus: ST_AxisStatus;
END_STRUCT
END_TYPE
]]></Declaration>
  </DUT>
</TcPlcObject>